#####################################################################
# Variables
#####################################################################

[gcode_macro _BEDFANS_VARS]
variable_fans: 'bed_fan'	# Bed Fans name from printer.cfg
variable_threshold: 100		# If bed temp target is above this threshold, fans will be enabled. If temp is set to below this threshold, fans will be disabled.
variable_fast: 1.0		    # Fan speed once bed temp is reached  
variable_slow: 0.2		    # Fan speed while bed is heating
gcode:


#####################################################################
# Macros
#####################################################################

[gcode_macro BEDFANS_SLOW]
gcode:
	# Vars
	{% set SLOW = printer["gcode_macro _BEDFANS_VARS"].slow|float %}
	{% set FANS = printer["gcode_macro _BEDFANS_VARS"].fans|string %}
	
	SET_FAN_SPEED FAN={FANS} SPEED={SLOW}


[gcode_macro BEDFANS_FAST]
gcode:
	# Vars
	{% set FAST = printer["gcode_macro _BEDFANS_VARS"].fast|float %}
	{% set FANS = printer["gcode_macro _BEDFANS_VARS"].fans|string %}
	
	SET_FAN_SPEED FAN={FANS} SPEED={FAST}


[gcode_macro BEDFANS_OFF]
gcode:
	# Vars
	{% set FANS = printer["gcode_macro _BEDFANS_VARS"].fans|string %}

	SET_FAN_SPEED FAN={FANS} SPEED=0



#####################################################################
# Macro Overrides
#####################################################################

[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
  # Parameters
  {% set HEATER = params.HEATER|default("None") %}
  {% set TARGET = params.TARGET|default(0)|int %}

  # Vars
  {% set THRESHOLD = printer["gcode_macro _BEDFANS_VARS"].threshold|int %}
  
  {% if HEATER|lower == "extruder" %}
    M104 S{TARGET}
  {% elif HEATER|lower == "heater_bed" %}
    M99140 S{TARGET}
  {% else %}
    {action_respond_info("Heater %s not supported" % HEATER)}
  {% endif %}
    
  # Set fans to low if heater_bed temp is requested above threshold temp, and kick off monitoring loop.
  {% if HEATER|lower == "heater_bed" %}
    {% if TARGET >= THRESHOLD %}
      BEDFANS_SLOW
      UPDATE_DELAYED_GCODE ID=BEDFANS_LOOP DURATION=1
    {% else %}
      BEDFANS_OFF
      UPDATE_DELAYED_GCODE ID=BEDFANS_LOOP DURATION=0						# Cancel bed fan loop if it's running
    {% endif %}
  {% endif %}


[gcode_macro M190]
rename_existing: M99190
gcode:
  # Parameters
  {% set S = params.S|int %}

  # Vars
  {% set THRESHOLD = printer["gcode_macro _BEDFANS_VARS"].threshold|int %}
  
  {% if S >= THRESHOLD %}
    BEDFANS_SLOW															# >= Threshold temp: Low speed fans while heating 
  {% else %}
    BEDFANS_OFF																# < Threshold temp: Turn bed fans off
  {% endif %}                                        
  
  M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}		    # Set bed temp
  
  {% if S != 0 %}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S|int} MAXIMUM={S|int + 5}	# Wait for bed temp within 5 degrees
  {% endif %}
  
  # Post-heating fan speeds
  {% if S >= THRESHOLD %}								    
    BEDFANS_FAST															# >= Threshold temp: Higher speed fans after heating finished
  {% endif %}


[gcode_macro M140]
rename_existing: M99140
gcode:
  # Parameters
  {% set S = params.S|float %}
  
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}


[gcode_macro TURN_OFF_HEATERS]
rename_existing: _TURN_OFF_HEATERS
gcode:
  BEDFANS_OFF
  _TURN_OFF_HEATERS


#####################################################################
# Monitoring (Delayed) GCode
#####################################################################

[delayed_gcode BEDFANS_LOOP]
gcode:
  # Vars
  {% set THRESHOLD = printer["gcode_macro _BEDFANS_VARS"].threshold|int %}
  
  {% if printer.heater_bed.target >= THRESHOLD %}							# Continue only if target temp greater than threshold.
    {% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 1) %}
      BEDFANS_FAST															# If within 1 degree of target temp: Higher speed fans
    {% else %}
      UPDATE_DELAYED_GCODE ID=BEDFANS_LOOP DURATION=5						# If temp not reached yet: loop again
    {% endif %}
  {% endif %}
